{"version":3,"sources":["components/ContactForm.js","components/ContactList.js","components/Filter.js","App.js","index.js"],"names":["INITIAL_STATE","name","number","Form","state","idName","shortid","generate","idNumber","handleChange","event","currentTarget","value","setState","handleSubmit","preventDefault","props","onSubmit","reset","className","s","form","this","htmlFor","input","type","id","placeholder","onChange","pattern","title","required","button","Component","ContactList","filteredContact","onDeleteContact","contact_container","contact_form","map","contactlist","onClick","Filter","onChangeFilter","App","contacts","filter","duplicateContactCheck","subContact","toLowerCase","nameCheck","find","contact","includes","alert","addContact","newContact","prevState","formSubmitContacts","data","console","log","filterContact","normalizedFilter","deleteContact","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.2ea19af9.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\nimport shortid from \"shortid\";\r\nimport s from \"./styles.css\";\r\n\r\nconst INITIAL_STATE = {\r\n  name: \"\",\r\n  number: \"\",\r\n};\r\n\r\nclass Form extends Component {\r\n  state = { ...INITIAL_STATE };\r\n\r\n  idName = shortid.generate();\r\n  idNumber = shortid.generate();\r\n\r\n  handleChange = (event) => {\r\n    const { name, value } = event.currentTarget;\r\n\r\n    this.setState({\r\n      [name]: value,\r\n    });\r\n  };\r\n\r\n  handleSubmit = (event) => {\r\n    event.preventDefault();\r\n    this.props.onSubmit(this.state);\r\n\r\n    this.reset();\r\n  };\r\n\r\n  reset = () => {\r\n    this.setState({ ...INITIAL_STATE });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <form className={s.form} onSubmit={this.handleSubmit}>\r\n          <label htmlFor=\"name\">\r\n            Name\r\n            <input\r\n              className={s.input}\r\n              type=\"text\"\r\n              name=\"name\"\r\n              id={this.idName}\r\n              placeholder=\"Your name\"\r\n              value={this.state.name}\r\n              onChange={this.handleChange}\r\n              pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n              title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n              required\r\n            />\r\n          </label>\r\n          <label htmlFor=\"number\">\r\n            Number\r\n            <input\r\n              className={s.input}\r\n              type=\"tel\"\r\n              name=\"number\"\r\n              placeholder=\"+38-000-000-00-00\"\r\n              id={this.idNumber}\r\n              value={this.state.number}\r\n              onChange={this.handleChange}\r\n              pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n              title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\r\n              required\r\n            />\r\n          </label>\r\n          <button className={s.button} type=\"submit\">\r\n            Add contact\r\n          </button>\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Form;\r\n","import s from \"./styles.css\";\r\n\r\nconst ContactList = ({ filteredContact, onDeleteContact }) => (\r\n  <div className={s.contact_container}>\r\n    <ul className={s.contact_form}>\r\n      {filteredContact.map(({ id, name, number }) => {\r\n        return (\r\n          <li className={s.contactlist} key={id}>\r\n            <p>{name}</p>\r\n            <p>{number}</p>\r\n            <button\r\n              className={s.button}\r\n              type=\"button\"\r\n              onClick={() => onDeleteContact(id)}\r\n            >\r\n              Delete\r\n            </button>\r\n          </li>\r\n        );\r\n      })}\r\n    </ul>\r\n  </div>\r\n);\r\n\r\nexport default ContactList;\r\n","import PropTypes from \"prop-types\";\r\nimport s from \"./styles.css\";\r\n\r\nconst Filter = ({ value, onChangeFilter }) => {\r\n  return (\r\n    <div className={s.form}>\r\n      <label htmlFor=\"filter\">\r\n        Find contacts by name\r\n        <input\r\n          className={s.input}\r\n          type=\"text\"\r\n          name=\"filter\"\r\n          placeholder=\"Search\"\r\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n          value={value}\r\n          onChange={onChangeFilter}\r\n        />\r\n      </label>\r\n    </div>\r\n  );\r\n};\r\n\r\nFilter.propTypes = {\r\n  value: PropTypes.string,\r\n  onChangeFilter: PropTypes.func,\r\n};\r\n\r\nexport default Filter;\r\n","import React, { Component } from \"react\";\nimport shortid from \"shortid\";\nimport \"./App.css\";\nimport Form from \"./components/ContactForm\";\nimport ContactList from \"./components/ContactList\";\nimport Filter from \"./components/Filter\";\n\nclass App extends Component {\n  state = {\n    contacts: [\n      { id: \"id-1\", name: \"Rosie Simpson\", number: \"459-12-56\" },\n      { id: \"id-2\", name: \"Hermione Kline\", number: \"443-89-12\" },\n      { id: \"id-3\", name: \"Eden Clements\", number: \"645-17-79\" },\n      { id: \"id-4\", name: \"Annie Copeland\", number: \"227-91-26\" },\n    ],\n    filter: \"\",\n    name: \"\",\n    number: \"\",\n  };\n\n  duplicateContactCheck = (subContact) => {\n    const value = subContact.name.toLowerCase();\n    const nameCheck = this.state.contacts.find((contact) =>\n      contact.name.toLowerCase().includes(value)\n    );\n\n    nameCheck\n      ? alert(`${nameCheck.name} is already in contacts`)\n      : this.addContact(subContact);\n  };\n\n  addContact = (newContact) => {\n    const contact = {\n      id: shortid.generate(),\n      ...newContact,\n    };\n    this.setState((prevState) => ({\n      contacts: [...prevState.contacts, contact],\n    }));\n  };\n\n  formSubmitContacts = (data) => {\n    console.log(data);\n  };\n\n  onChangeFilter = (event) => {\n    this.setState({ filter: event.currentTarget.value });\n  };\n\n  filterContact = () => {\n    const { contacts, filter } = this.state;\n    const normalizedFilter = filter.toLowerCase();\n    return contacts.filter((contact) =>\n      contact.name.toLowerCase().includes(normalizedFilter)\n    );\n  };\n\n  deleteContact = (id) => {\n    this.setState((prevState) => ({\n      contacts: prevState.contacts.filter((contact) => contact.id !== id),\n    }));\n  };\n\n  render() {\n    const { filter } = this.state;\n    const filteredContact = this.filterContact();\n    return (\n      <>\n        <h1>Phonebook</h1>\n        <Form onSubmit={(this.duplicateContactCheck, this.addContact)} />\n        <h2>Contacts</h2>\n        <Filter onChangeFilter={this.onChangeFilter} value={filter} />\n        <ContactList\n          filteredContact={filteredContact}\n          onDeleteContact={this.deleteContact}\n        />\n      </>\n    );\n  }\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n// import reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n// reportWebVitals();\n"],"sourceRoot":""}